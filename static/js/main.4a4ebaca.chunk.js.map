{"version":3,"sources":["atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","Theme.tsx"],"names":["Categories","categoryState","atom","key","default","TO_DO","localStorageToDos","JSON","parse","localStorage","getItem","toDoState","length","toDoSelector","selector","get","toDos","category","filter","toDo","CreateToDo","useRecoilState","setToDos","useRecoilValue","useForm","register","handleSubmit","setValue","onSubmit","oldToDos","ToDos","id","Date","now","text","stringifiedToDos","stringify","setItem","required","placeholder","ToDo","useSetRecoilState","onclick","event","name","currentTarget","targetIndex","findIndex","todo","newToDo","slice","DOING","onClick","DONE","parentElement","newTodoArray","Number","stringifiedNewToDos","ToDoList","setCategory","value","onInput","map","style","display","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.4a4ebaca.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\n/*\n\tenum은 계속해서 저장해야 하는 값을 저장할 수 있는 도구임\n\tenum의 type은 숫자 0,1,2 임 \n\t그래서 \"TO_DO\" = \"TO_DO\" 로 타입 설정 해줌\n */\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nconst localStorageToDos = JSON.parse(localStorage.getItem(\"ToDos\") || \"{}\");\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: localStorageToDos?.length > 0 ? localStorageToDos : [],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { toDoState, categoryState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const [ToDos, setToDos] = useRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n\n  const handleValid = ({ toDo }: IForm) => {\n    // setToDos((oldToDos) => [\n    //   { text: toDo, id: Date.now(), category: category },\n    //   ...oldToDos,\n    // ]);\n    setToDos((oldToDos) => {\n      const ToDos = [{ id: Date.now(), text: toDo, category }, ...oldToDos];\n      const stringifiedToDos = JSON.stringify(ToDos);\n      localStorage.setItem(\"ToDos\", stringifiedToDos);\n      return ToDos;\n    });\n\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, id, category }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onclick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((todo) => todo.id === id);\n      /* categery에는 name이 없기에 as any로 typescript 에게 이거는 신경쓰지말라고 알려줌\n      하지만 이거는 별로 좋은 방법이 아님 \n      onclick 함수에 parameter를 넣어서 <button onClick={() => onclick(value)}></button>\n      으로 사용 하는 걸 선호 함 */\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  const DeleteToDo = (event: React.FormEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { parentElement },\n    } = event;\n\n    setToDos((oldToDos) => {\n      const newTodoArray = oldToDos.filter(\n        (todo) => todo.id !== Number(parentElement?.id)\n      );\n      const stringifiedNewToDos = JSON.stringify(newTodoArray);\n      localStorage.setItem(\"ToDos\", stringifiedNewToDos);\n      return newTodoArray;\n    });\n  };\n\n  return (\n    <li id={id as any}>\n      <span>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onclick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onclick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onclick}>\n          Done\n        </button>\n      )}\n      <button onClick={DeleteToDo}>DELETE</button>\n    </li>\n  );\n}\n\nexport default ToDo;\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { categoryState, toDoSelector, Categories, toDoState } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [category, setCategory] = useRecoilState(categoryState);\n\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <hr />\n      <select value={category} onInput={onInput}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n      </select>\n      <CreateToDo />\n\n      {toDos?.map((toDo) => (\n        <div key={toDo.id} style={{ display: \"flex\" }}>\n          <ToDo {...toDo} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./Theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}